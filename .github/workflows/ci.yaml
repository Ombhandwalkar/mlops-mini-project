name: CI Pipeline

on: push

jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: install dependencies
        run: |
          pip install -r requirements.txt

      - name: run pipeline
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: |
          dvc repro
      
      - name: Run model Test
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT}}
        run: |
          python -m unittest tests/test_model.py
        
      - name: Promote model to production
        if: success()
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: python scripts/promote_model.py

      - name: Run Flask app tests
        if: success()
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: python -m unittest tests/test_flask_app.py


      - name : Login to ECR server
        run : |
          aws configure set aws_access_key_id ${{secrets.AWS_ACCESS_KEY_ID}}
          aws configure set aws_secret_access_key ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/b2r6l3l6

      - name : Build Docker Image
        run : |
          docker build -t om-docker .

      - name : Tag Docker Image
        run : |
          docker tag om-docker:latest public.ecr.aws/b2r6l3l6/om-docker:latest

      - name : Push Docker image to AWS ECR
        run : |
          docker push public.ecr.aws/b2r6l3l6/om-docker:latest

      - name : Deploy on EC2
        if : success()
        uses: appleboy/ssh-action@v0.1.5
        with :
          host : ${{secrets.EC2_HOST}}
          username: ${{secrets.EC2_USER}}
          key : ${{secrets.EC2_SSH_KEY}}
          script:
            aws configure set aws_access_key_id ${{secrets.AWS_ACCESS_KEY_ID}}
            aws configure set aws_secret_access_key ${{secrets.AWS_SECRET_ACCESS_KEY}}
            aws configure set default.region us-east-1
            aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/b2r6l3l6
            docker pull public.ecr.aws/b2r6l3l6/om-docker:latest
            docker stop my-app || true
            docker rm my-app  || true
            docker run -p 80:5000  -e DAGSHUB_PAT = ${{secrets.DAGSHUB_PAT}} --name om-app public.ecr.aws/b2r6l3l6/om-docker:latest